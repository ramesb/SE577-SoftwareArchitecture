"use strict";(self["webpackChunkmyapp"]=self["webpackChunkmyapp"]||[]).push([[299],{299:function(e,t,o){o.r(t),o.d(t,{default:function(){return v}});var s=o(252),l=o(963),n=o(577);const r={key:0,class:"edit-form"},u=(0,s._)("h4",null,"Repo",-1),a={class:"form-group"},i=(0,s._)("label",{for:"title"},"Title",-1),p={class:"form-group"},c=(0,s._)("label",{for:"description"},"Description",-1),d={class:"form-group"},h=(0,s._)("label",null,[(0,s._)("strong",null,"Status:")],-1),g={key:1},R=(0,s._)("br",null,null,-1),b=(0,s._)("p",null,"Please click on a Repo...",-1),m=[R,b];function f(e,t,o,R,b,f){return b.currentRepo?((0,s.wg)(),(0,s.iD)("div",r,[u,(0,s._)("form",null,[(0,s._)("div",a,[i,(0,s.wy)((0,s._)("input",{type:"text",class:"form-control",id:"title","onUpdate:modelValue":t[0]||(t[0]=e=>b.currentRepo.title=e)},null,512),[[l.nr,b.currentRepo.title]])]),(0,s._)("div",p,[c,(0,s.wy)((0,s._)("input",{type:"text",class:"form-control",id:"description","onUpdate:modelValue":t[1]||(t[1]=e=>b.currentRepo.description=e)},null,512),[[l.nr,b.currentRepo.description]])]),(0,s._)("div",d,[h,(0,s.Uk)(" "+(0,n.zw)(b.currentRepo.published?"Published":"Pending"),1)])]),b.currentRepo.published?((0,s.wg)(),(0,s.iD)("button",{key:0,class:"badge badge-primary mr-2",onClick:t[2]||(t[2]=e=>f.updatePublished(!1))}," UnPublish ")):((0,s.wg)(),(0,s.iD)("button",{key:1,class:"badge badge-primary mr-2",onClick:t[3]||(t[3]=e=>f.updatePublished(!0))}," Publish ")),(0,s._)("button",{class:"badge badge-danger mr-2",onClick:t[4]||(t[4]=(...e)=>f.deleteRepo&&f.deleteRepo(...e))}," Delete "),(0,s._)("button",{type:"submit",class:"badge badge-success",onClick:t[5]||(t[5]=(...e)=>f.updateRepo&&f.updateRepo(...e))}," Update "),(0,s._)("p",null,(0,n.zw)(b.message),1)])):((0,s.wg)(),(0,s.iD)("div",g,m))}var y=o(647),_={name:"MyRepo",data(){return{currentRepo:null,message:""}},methods:{getRepo(e){y.Z.get(e).then((e=>{this.currentRepo=e.data,console.log(e.data)})).catch((e=>{console.log(e)}))},updatePublished(e){var t={id:this.currentRepo.id,title:this.currentRepo.title,description:this.currentRepo.description,published:e};y.Z.update(this.currentRepo.id,t).then((t=>{console.log(t.data),this.currentRepo.published=e,this.message="The status was updated successfully!"})).catch((e=>{console.log(e)}))},updateRepo(){y.Z.update(this.currentRepo.id,this.currentRepo).then((e=>{console.log(e.data),this.message="The Repo was updated successfully!"})).catch((e=>{console.log(e)}))},deleteRepo(){y.Z["delete"](this.currentRepo.id).then((e=>{console.log(e.data),this.$router.push({name:"Repos"})})).catch((e=>{console.log(e)}))}},mounted(){this.message="",this.getRepo(this.$route.params.id)}},k=o(744);const w=(0,k.Z)(_,[["render",f]]);var v=w}}]);
//# sourceMappingURL=299.8d72ae2d.js.map